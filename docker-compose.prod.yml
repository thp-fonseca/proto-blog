services:
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    env_file: 
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  backend:
    build:
      context: .
      dockerfile: ./apps/blog-api/Dockerfile
      args:
        - MONGODB_URI=${MONGODB_URI}
        - PORT=${SERVER_PORT}
        - JWT_SECRET=${JWT_SECRET}
        - NODE_ENV=${NODE_ENV}
    container_name: api-blog
    env_file: 
      - .env
    environment:
      MONGODB_URI: ${MONGODB_URI}
      PORT: ${SERVER_PORT}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - mongo
    networks:
      - app-network
    
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: ./apps/web/Dockerfile
  #     args:
  #       - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
  #   container_name: website
  #   env_file: 
  #     - .env
  #   environment:
  #     NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local